#!/sbin/sh
export OPENGAZIP="$3"
export OUTFD="/proc/self/fd/$2"
export TMP="/tmp"
ui_print() {
  echo "ui_print $1
    ui_print" >> $OUTFD
  echo "$1" >> $TMP/log-sh23.txt
}
unzip -o "$OPENGAZIP" -d "$TMP"
set_perm() {
  chown "$1:$2" "$4"
  chmod "$3" "$4"
}
ch_con() {
  chcon -h u:object_r:system_file:s0 "$1"
}
#---------------------------------------------------------------------------------
#script

#
ui_print " "
ui_print " "
ui_print " "
ui_print " "
#

#//\\Mount

if [ -d /system/system ];then
    echo "ui_print  /*/*/*/*/*\*\*\*\*/*/*/*/\*"
else
    mount -a
fi
if [ -d /system/system ];then
    ui_print "Partição montada"
elif [ -d /system ];then
    ui_print "Montando partição"
    mount system
else
    ui_print "Partições não montadas, saindo ..."
    exit
fi
#//\\Mount

#\/System detects
if [ -d /system/system ];then
    export SYSTEM=/system/system
    export AS_ROOT="A/B"
else
    export SYSTEM=/system
    export AS_ROOT="A Only"
fi
if [ -d $SYSTEM/product ];then
    export PROD="$SYSTEM/product"
    export PROD_DETECT="$SYSTEM"
elif [ -d /product ];then
    mount product
    export PROD="/product"
    export PROD_DETECT="Raiz do sistema"
else
    export PROD_DETECT="Não tem"
fi
ui_print "Seu sistema é tipo: $AS_ROOT"
ui_print "A pasta PRODUCT é na/no: $PROD_DETECT"
#\/System detects

# Change this path to wherever the keycheck binary is located in your installer
KEYCHECK=$TMP/keycheck
chmod 755 $KEYCHECK

keytest() {
  ui_print "- Vol Key Test -"
  ui_print "   Press a Vol Key:"
  (/system/bin/getevent -lc 1 2>&1 | /system/bin/grep VOLUME | /system/bin/grep " DOWN" > $INSTALLER/events) || return 1
  return 0
}   

choose() {
  #note from chainfire @xda-developers: getevent behaves weird when piped, and busybox grep likes that even less than toolbox/toybox grep
  while true; do
    /system/bin/getevent -lc 1 2>&1 | /system/bin/grep VOLUME | /system/bin/grep " DOWN" > $INSTALLER/events
    if (`cat $INSTALLER/events 2>/dev/null | /system/bin/grep VOLUME >/dev/null`); then
      break
    fi
  done
  if (`cat $INSTALLER/events 2>/dev/null | /system/bin/grep VOLUMEUP >/dev/null`); then
    return 0
  else
    return 1
  fi
}

chooseold() {
  # Calling it first time detects previous input. Calling it second time will do what we want
  $KEYCHECK
  $KEYCHECK
  SEL=$?
  if [ "$1" == "UP" ]; then
    UP=$SEL
  elif [ "$1" == "DOWN" ]; then
    DOWN=$SEL
  elif [ $SEL -eq $UP ]; then
    return 0
  elif [ $SEL -eq $DOWN ]; then
    return 1
  else
    ui_print "   Vol key not detected!"
    abort "   Use name change method in TWRP"
  fi
}
ui_print " "
if [ -z $NEW ]; then
  if keytest; then
    FUNCTION=choose
  else
    FUNCTION=chooseold
    ui_print "   ! Dispositivo legado detectado! Usando Metodo antigo"
    ui_print " "
    ui_print "- Programando Botão de Volume -"
    ui_print "   Press Vol Up de novo:"
    $FUNCTION "UP"
    ui_print "   Press Vol Down"
    $FUNCTION "DOWN"
  fi
  
  #//\\Botoes
  ui_print " "
  ui_print "- Selecione uma opção -"
  ui_print "   Debug on/off"
  ui_print "   Vol Up = Debug On, Vol Down = Debug Off"
  #//\\Botoes

  if $FUNCTION; then 
    debug=true
  else 
    debug=false
  fi
else
  ui_print "   Option specified in zipname!"
fi

ui_print " "
ui_print " "
ui_print "$debug"
ui_print " "

case $debug in
  true ) ui_print "Modo debug desligado";;
  false ) 
        BUILD="$(cat /system/system/build.prop | grep "ixel")"
        case $BUILD in
        *Pixel* ) ui_print "ROM/GSi Pixel, não podemos continua ¹" ; exit;;
        *pixel* ) ui_print "ROM/GSi Pixel, não podemos continua ²" ; exit;;
        ** ) ui_print "Não é Pixel, não podemos continuar";;
        esac
    ;;
esac

#\/Apps detect
if [ -d $SYSTEM/app/YouTube ];then
    ui_print "Removendo o YouTube ¹"
    rm -rf $SYSTEM/app/YouTube
fi
if [ -d $SYSTEM/priv-app/YouTube ];then
    ui_print "Removendo o YouTube ²"
    rm -rf $SYSTEM/priv-app/YouTube
fi
if [ -d $SYSTEM/priv-app/AudioFX ];then
    ui_print "Removendo o AudioFX ¹"
    rm -rf $SYSTEM/priv-app/AudioFX
fi
if [ -d $SYSTEM/app/AudioFX ];then
    ui_print "Removendo o AudioFX ²"
    rm -rf $SYSTEM/priv-app/AudioFX
fi
if [ -d $SYSTEM/priv-app/MusicFX ];then
    ui_print "Removendo o MusicFX ¹"
    rm -rf $SYSTEM/priv-app/MusicFX
fi
if [ -d $SYSTEM/app/MusicFX ];then
    ui_print "Removendo o MusicFX ²"
    rm -rf $SYSTEM/app/MusicFX
fi
if [ -d $PROD/priv-app/Camera2 ];then
    ui_print "Android Camera2 AOSP detectado. removendo ¹"
    rm -rf "$PROD/priv-app/Camera2"
fi
if [ -d $PROD/app/Camera2 ];then
    ui_print "Android Camera2 AOSP detectado. removendo ²"
    rm -rf "$PROD/app/camera2"
fi
#\/Apps detect

#\/Arquivos no System
if [ -d $TMP/system ];then
    ui_print "Instalando alguns aplicativos"
    ui_print " "
    cp -rf $TMP/system/* $SYSTEM
else
    ui_print "alguns arquivos não foi extraidos. por favor execute de novo."
    exit
fi
#\/Arquivos no System

#/\audio
if [-d $SYSTEM/media ];then
    ui_print "Audio no System"
    cp -rf $TMP/ $SYSTEM/media
fi
if [-d $PROD/media ];then
    ui_print "Audio no Product"
    cp -rf $TMP/ $PROD/media
fi
#/\audio

#\/BOOT
#Bootanimation light
if [ -e $PROD/media/bootanimation.zip ];then
    ui_print "Bootanimation no PRODUCT"
    cp -rf $TMP/bootanimation/bootanimation.zip $PROD/media/
fi
if [-e $SYSTEM/media/bootanimation.zip ];then
    ui_print "Bootanimation no SYSTEM"
    cp -rf $TMP/bootanimation/bootanimation.zip $SYSTEM/media/
fi
#Bootanimation light
#Bootanimation dark
if [ -e $PROD/media/bootanimation-dark.zip ];then
    ui_print "Bootanimation dark no PRODUCT"
    cp -rf $TMP/bootanimation/bootanimation-dark.zip $PROD/media/
fi
if [ -e $SYSTEM/media/bootanimation-dark.zip ];then
    ui_print "Bootanimation DARK no SYSTEM"
    cp -rf $TMP/bootanimation/bootanimation-dark.zip $SYSTEM/media/
fi
#Bootanimation dark
#\/BOOT

if [ -d /dev/block/bootdevice/by-name ];then
    #\/Boot_logo_a
        ui_print " "
        ui_print "/dev/block/bootdevice/by-name"
        ui_print "Backup do logo_a na pasta /data/backup-sh23/"
        mkdir /data/backup-sh23
        cp -rf /dev/block/bootdevice/by-name/logo_a /data/backup-sh23/logo_a.img
        cp -rf $TMP/logo.bin /dev/block/bootdevice/by-name/logo_a
    #\/Boot_logo_a
    #\/Boot_logo_b
        ui_print " "
        ui_print "Backup do logo_b na pasta /data/backup-sh23/"
        mkdir /data/backup-sh23
        cp -rf /dev/block/bootdevice/by-name/logo_b /data/backup-sh23/logo_b.img
        cp -rf $TMP/logo.bin /dev/block/bootdevice/by-name/logo_b
    #\/Boot_logo_b
fi
#---------------------------------------------------------------------------------
#Final do script

  #//\\Botoes
  ui_print " "
  ui_print "   logs"
  ui_print "   Vol Up = Sim, Vol Down = Não"
  #//\\Botoes
ui_print " "
ui_print "Vai quere copiar os logs"

if $FUNCTION; then 
  LOGS=true
else 
  LOGS=false
fi
ui_print "logs: $LOGS"

case $LOGS in
  false ) ui_print "Não vamos copiar o log";;
  true ) ui_print "Copiando os logs"
    cp -rf $TMP/log-sh23.txt /sdcard/Log-SH23.txt;;
esac
ui_print " "
ui_print "- Completo!"
ui_print "- © Sirherobrine23"
ui_print " "
ui_print " "
ui_print " "

umount system
exit
